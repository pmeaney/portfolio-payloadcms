# This is for local dev (e.g. laptop) development
services:
  pg-dev-payloadcms:
    image: postgres:17
    container_name: pg-dev-payloadcms
    env_file:
      - ./payloadcms-postgres-db-portfolio2025/.env
    ports:
      - "5432:5432"
    volumes:
      - ./payloadcms-postgres-db-portfolio2025/pg-data-payloadcms:/var/lib/postgresql/data
      - ./payloadcms-postgres-db-portfolio2025/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - dockernet-payloadcms-dev

  payloadcms-dev-portfolio2025:
    image: node:20-alpine
    container_name: payloadcms-dev-portfolio2025
    working_dir: /app
    volumes:
      # Main bind mount for project files
      - ./payloadcms-cms-fe-portfolio2025:/app
      # Explicitly bind mount the migrations directory for better visibility
      - ./payloadcms-cms-fe-portfolio2025/src/migrations:/app/src/migrations
      # Still use volume for node_modules to avoid performance issues
      - payloadcms_node_modules:/app/node_modules
      # Still use volume for .next cache to improve build performance
      - payloadcms_next_cache:/app/.next
    command: sh -c "npm install -g pnpm && pnpm install && pnpm dev"
    env_file:
      - ./payloadcms-cms-fe-portfolio2025/.env
    ports:
      - "3000:3000"
    networks:
      - dockernet-payloadcms-dev
    depends_on:
      - pg-dev-payloadcms

volumes:
  pg-data-payloadcms:
    name: pg-data-payloadcms
  payloadcms_node_modules:
    name: payloadcms_node_modules
  payloadcms_next_cache:
    name: payloadcms_next_cache

networks:
  dockernet-payloadcms-dev:
    name: dockernet-payloadcms-dev